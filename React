'use strict' 
class TodoObject {

	constructor(existingItems) {
  		if (existingItems) {
      	this.items = existingItems
      }
   }
   
   addItem(itemText) { 
      this.items.push({ text: itemText})
   } 
   
   toggleItemDoneStatus(item) {
   	let updatedItems = this.items.map(i => {
    	if (item.text === i.text) {
      	return { text: i.text, done: !i.done}
      }
    	return i
    })
    
    this.items = updatedItems
   }
}

class TodoItem extends React.Component {

	render() {

    let {item, key, onChange} = this.props

	let boxTicked = function() {	
    	onChange(item)
    }
    
    let className = item.done ? "done" : ""
    
  	return (
      <li key={key}>
        <label>
          <input type="checkbox" defaultChecked={item.done} onChange={boxTicked} /> 
          <span className={className}> {item.text}</span>
        </label>
      </li>
    )
  }
}

class TodoForm extends React.Component {

	state = { inputValue: ""}
  
  handleChange = this.handleChange.bind(this)
  submitForm = this.submitForm.bind(this)
  
  handleChange(e) {
  	e.preventDefault();
    this.setState({
      inputValue: e.target.value
    })
  }
  
  submitForm(e) {
  	e.preventDefault();
  	if (e.keyCode === 13) { /* Enter key pressed */
      this.props.todoObject.addItem(this.state.inputValue)
      this.setState({
        inputValue: ''
      })
    }
  }
  
  toggleDoneStatus = this.toggleDoneStatus.bind(this)
  
  toggleDoneStatus(item) {
  	if (!this.props.todoObject) {
    	console.log('panic - no object in props')
    }
  	this.props.todoObject.toggleItemDoneStatus(item)
  }
  
	render() {
  
  	const { todoObject } = this.props
    
  	return (
    	<div>
        <h3>New item</h3>
        <div>
          <input type="text" onKeyUp={this.submitForm} onChange={this.handleChange} value={this.state.inputValue} />
        </div>
        <div>
          <h2>Todos:</h2>
          <ol>
          {todoObject.items.map((item, id) => (
            <TodoItem key={id} item={item} onChange={this.toggleDoneStatus} />
          ))}
          </ol>
        </div>
      </div>
    )
  }
}

class TodoApp extends React.Component {
  
  render() {
    const items = [
      { text: "Learn JavaScript", done: false },
      { text: "Learn React", done: false },
      { text: "Play around in JSFiddle", done: true },
      { text: "Build something awesome", done: true }
    ]
  	const todoObject = new TodoObject(items)
    return (
      <TodoForm todoObject={todoObject} />
    )
  }
}

ReactDOM.render(<TodoApp />, document.querySelector("#app"))
